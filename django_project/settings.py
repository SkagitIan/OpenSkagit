"""
Django settings for django_project project.

Generated by 'django-admin startproject' using Django 2.2.12.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import sys
import netifaces
from pathlib import Path
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'd0644e6ff126cf9ac1b3171a868ae05b'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Find out what the IP addresses are at run time
# This is necessary because otherwise Gunicorn will reject the connections
def ip_addresses():
    try:
        interfaces = netifaces.interfaces()
    except PermissionError:
        return ["127.0.0.1", "::1"]

    ip_list = []
    for interface in interfaces:
        try:
            addrs = netifaces.ifaddresses(interface)
        except PermissionError:
            continue
        for x in (netifaces.AF_INET, netifaces.AF_INET6):
            if x in addrs:
                ip_list.append(addrs[x][0]['addr'])

    return ip_list or ["127.0.0.1", "::1"]

ALLOWED_HOSTS = ip_addresses()


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'openskagit',
    'rest_framework',
    "django.contrib.gis",
    "leaflet",
]

LEAFLET_CONFIG = {
    "DEFAULT_CENTER": (48.5, -122.3),  # roughly Skagit County
    "DEFAULT_ZOOM": 10,
    "MIN_ZOOM": 5,
    "MAX_ZOOM": 19,
    "SCALE": "metric",
}


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'django_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME': 'skagit',
        'USER': 'django',
        'PASSWORD': 'grandson2025',
        'HOST': 'localhost',
        'PORT': '5432',
        'OPTIONS': {'sslmode': 'require'},
    }
}

if os.environ.get("USE_SQLITE_FOR_TESTS") or ("test" in sys.argv and not os.environ.get("USE_POSTGIS_FOR_TESTS")):
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": BASE_DIR / "test_db.sqlite3",
        }
    }


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

# URL that serves static files
STATIC_URL = '/static/'

# Directory where 'collectstatic' will put everything
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Directories where Django looks for static assets in apps
STATICFILES_DIRS = [
    BASE_DIR / 'static',
]

# Optional cache optimization for production


REST_FRAMEWORK = {
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 25,
    "DEFAULT_RENDERER_CLASSES": [
        "rest_framework.renderers.JSONRenderer",
    ],
}

# Vector search configuration
EMBEDDING_MODEL_NAME = "all-MiniLM-L6-v2"
